# This function is made to avoid boiler plate
# code and clean the None values from the dict
# generated by Namespace objects returned by
# argparse.parse_args(). If for some reason 
# the dict
#
# Example: 
#       
# [In]: {
#       
#           'write': 'someparam',
#           'read': None,
#           'clearSession': None,
#           'clearStats': None,
#           'outputStats': None,
#           'beginAssembly': None,
#           'printFullSaveList': None,
#           'removePartialSave': None
# }
#
#       
# [Out]: {
#         'write': 'someparam' 
# }
#
def validate_args(parser_object) -> dict:
    data = vars(parser_object)
    cleaned_data = {}
    for key, value in data.items():
        if value != None:
            cleaned_data[key] = value

    return cleaned_data

# This function is similar from Dict.get()
# But implemented to List type
def list_get(_list: list, index: int, default=''):
	try:
		return _list[index]
	except IndexError:
		return default